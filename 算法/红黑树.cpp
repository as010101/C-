
     1、每个节点不是红色就是黑色。
     2、根节点为黑色。
     3、如果节点为红色，其子节点必须为黑色。
     4、任意一个节点到到NULL（树尾端）的任何路径，所含之黑色节点数必须相同。


插入(处理红红问题)

1.任何一个即将插入的新结点的初始颜色都为红色。这一点很容易理解，因为插入黑点会增加某条路径上黑结点的数目，从而导致整棵树黑高度的不平衡

2.如果父为黑，显然符合所有要求

3.父为红，叔（显然只有一个叔，因为是二叉树）为红,将两者变黑,再将祖变红(执行此才可在3的基础上满足4，但是这是针对祖为黑的情况，因为父已经为红，但是，如果祖的f
父节点为红,这就违反了红黑树的性质，需要再将上一层变黑，注意在向上迭代可能会遇到黑叔，这时需要旋转)




删除
